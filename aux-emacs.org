#+title Aux Emacs config
#+PROPERTY: header-args:emacs-lisp :tangle init-trans.el :mkdirp yes

* Setup
** Add rational-emacs
#+begin_src emacs-lisp
  (require 'rational-defaults)
  (require 'rational-screencast)
  (require 'rational-ui)
  (require 'rational-editing)
  (require 'rational-evil)
  (require 'rational-completion)
  (require 'rational-windows)
  (require 'rational-org)
#+end_src

#+begin_src emacs-lisp
  (straight-use-package 'project)
#+end_src
** Adding custom modules
#+begin_src emacs-lisp

  (when (or
         (file-directory-p (expand-file-name "custom-modules/" rational-config-path))
         (file-symlink-p (expand-file-name "custom-modules/" rational-config-path)))

    (add-to-list 'load-path (expand-file-name "custom-modules/" rational-config-path))

    (let ((default-directory (expand-file-name "custom-modules/" rational-config-path)))
      (normal-top-level-add-subdirs-to-load-path))
    )
#+end_src

** Env variables

A GNU Emacs library to ensure environment variables inside Emacs look the same as in the user's shell.
Particularly useful for OS X.
https://github.com/purcell/exec-path-from-shell

#+begin_src emacs-lisp
  ; Follow best practice by setting your environment variables so that they are available to both interactive and non-interactive shells. In practical terms, for most people this means setting them in ~/.profile, ~/.bash_profile, ~/.zshenv instead of ~/.bashrc and ~/.zshrc.
  (when (memq window-system '(mac ns x))
    (straight-use-package 'exec-path-from-shell)
    (setq exec-path-from-shell-arguments nil)
    (exec-path-from-shell-initialize))

#+end_src

** OS X Meta rebinding
Changing the command key to be the META key in Emacs.

#+begin_src emacs-lisp
  (when (eq system-type 'darwin)
    (setq mac-command-modifier 'meta)
    (setq mac-option-modifier 'super)
    (setq mac-right-option-modifier 'none))

#+end_src

* Basic UI configuration
** Theme

#+begin_src emacs-lisp
  (load-theme 'doom-snazzy t)
#+end_src

** Font

#+begin_src emacs-lisp

  (custom-set-variables
   '(rational-ui-default-font
     '(:font "JetBrains Mono" :weight light :height 150)))

  (set-face-attribute 'variable-pitch nil
                      :font "Iosevka Aile"
                      :height 150
                      :weight 'light)
#+end_src

** Make titlebar transparent
#+begin_src emacs-lisp
  ;;;; Make the titlebar on macOS transparent
  (when (eq system-type 'darwin)
    (straight-use-package 'ns-auto-titlebar)
    (ns-auto-titlebar-mode))
#+end_src

* Editor
** Display line number
#+begin_src emacs-lisp

  ;; Enabling line numbers
  (customize-set-variable 'rational-ui-display-line-numbers t)

#+end_src
** Delete trailing whitespace on save
Not entirely sure how these two interact with each other
#+begin_src emacs-lisp

  (add-hook 'before-save-hook 'delete-trailing-whitespace)

#+end_src

** Auto-save
#+begin_src emacs-lisp

  (straight-use-package 'super-save)
  (super-save-mode +1)
  (setq super-save-auto-save-when-idle t)

#+end_src

** Fill column
#+begin_src emacs-lisp

  (setq-default fill-column 100)

#+end_src

* Git
#+begin_src emacs-lisp
  (straight-use-package 'magit)
  (setq magit-display-buffer-function #'magit-display-buffer-same-window-except-diff-v1)
#+end_src

* Org-mode
#+begin_src emacs-lisp
  (require 'tdtron-org)
#+end_src

* Keybinds
#+begin_src emacs-lisp
  (require 'tdtron-keybinds)
#+end_src

* Org Roam
#+begin_src emacs-lisp
  (require 'tdtron-org-roam)
#+end_src

* Racket
#+begin_src emacs-lisp
  (require 'tdtron-racket)
#+end_src
